name: CI/CD Pipeline
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  # Job to build and push the custom Docker image
  build_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      repository: ${{ steps.repo.outputs.repository }}
      
    steps:
      - name: Checkout repository (for Dockerfile only)
        uses: actions/checkout@v4
          
      - name: Set lowercase repository name
        id: repo
        run: echo "repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.repository }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_v1.2  # Use the specific Dockerfile version
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  # Build and test job using the custom Docker image
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [build_image]
    # Use the custom Docker image built in the previous job
    container: 
      image: ghcr.io/${{ needs.build_image.outputs.repository }}:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          submodules: recursive
          fetch-depth: 0

      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          
      - name: Navigate and check directories
        run: |
          cd $GITHUB_WORKSPACE
          pwd
          ls -la util/
          ls -la tools/

      - name: Run Python script and compiled binary
        env:
          PYTHONIOENCODING: utf-8
        run: |
          echo "Running trading_system and saving output to result.txt..."
          python3 RunTradeSystem.py

      - name: Run trading_system
        run: |
          ls -la output/
          ./output/trading_system > $GITHUB_WORKSPACE/result.txt
      
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-and-test-artifacts
          path: |
            result.txt
            parameter_check.log
            error.log
          retention-days: 7